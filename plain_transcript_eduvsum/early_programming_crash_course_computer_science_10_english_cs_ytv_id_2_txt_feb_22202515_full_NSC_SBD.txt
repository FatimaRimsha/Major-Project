Hi i'm carrie anne and welcome to crash course computer science over the last few episodes we've talked a lot about the mechanics of how computers work how they use complex circuits to save and retrieve values from memory and perform operations on those values like adding two numbers together we've even briefly talked about sequences of operations which is a computer program what we haven't talked about is how a program gets into a computer you might remember in episodes 7 and 8 that we stepped through some simple example programs to the cup that we had. Created for simplicity we just waved our hands and said that the program was already magically in memory but in reality programs have to be loaded into a computers memory it's not magic it's computer science the need to program machines existed way before the development of computers the most famous example of this was in textile manufacturing if you just wanted to weave a big red tablecloth you could simply feed. Thread into a loom and let it run but what about if you wanted the cloth to have a pattern like stripes or plaid workers would have to periodically reconfigure the loom as dictated by the pattern but this was labour intensive which made pattern fabrics expensive in response joseph marie jacquard developed a programmable textile loom which he first demonstrated in 1801 the pattern for each row of the cloth was defined by a punched card. The thread to vary the pattern across rows these punch cards were arranged in long chains forming a sequence of commands for the loom sound familiar many consider jacquard loom to be one of the earliest forms of programming punched cards turned out to be a cheap reliable and fairly human readable way to store data nearly a century later punch cards were used to help tabulate the 1890 us census which we talked about in episode 1 each card held an individual persons data things like race marital status number of children country of birth and so on for each demographic question a census worker. Would punch out a hole at the appropriate position when a card was fed into the tabulating machine a hole would cause the running total for that specific answer to be increased by one in this way you could feed the entire county is worth of people and at the end you'd have running totals for all of the questions that you ask it's important to note here that early tabulating machines were not truly computers as they could only do one thing tabulate their operation was fixed and not programmable punch cards stored data but not a program. Adding features to subtract multiply divide and even make simple decisions about when to perform certain operations to trigger these functions appropriately so that different calculations could be performed a programmer accessed a control panel this panel was full of little sockets into which a programmer would plug cables to pass values and signals between different parts of the machine for this reason they were also called plugboard unfortunately this meant having to rewire the machine each time a different program needed to be run and so by the 1920s these plugboard were. Were made swap able this not only made programming a lot more comfortable but also allowed for different programs to be plugged into a machine for example one board might be wired to calculate sales tax while another helped with payroll but plugboard were fiendishly complicated to program this tangle of wires is a program for calculating a profit and loss summary using an ism 402 accounting machine which were popular in the 1940s and this style of plugboard programming wasn't unique to electromechanical computers the worlds first general purpose electronic computer. The eric completed in 1946 used a ton of them even after a program had been completely figured out on paper physically wiring up the eric and getting the program to run could take upwards of three weeks given the enormous cost of these early computers weeks of downtime simply to switch programs was unacceptable and a new faster more flexible way to program machines was badly needed fortunately by the late 1940s and into the 50s electronic memory was becoming feasible as costs fell memory size grew instead of storing a program. As a physical plug board of wires it became possible to store a program entirely in a computers memory where it could be easily changed by programmers and quickly accessed by the cup these machines were called stored program computers with enough computer memory you could store not only the program you wanted to run but also any data your program would need including new values it created along the way unifying the program and data into a single shared memory is called the on newman architecture named after john on newman a prominent mathematician and physicist who worked on the manhattan. And project and several early electronic computers and once said i am thinking about something much more important than bombs i'm thinking about computers the hallmarks of a on newman computer are a processing unit containing an arithmetic logic unit data registers an instruction register and instruction address register and finally a memory to store both data and instructions hopefully this sounds familiar because we actually built a on newman computer in episode 7. In 1948 by the university of manchester nicknamed baby and even the computer you're watching this video on right now uses the same architecture now electronic computer memory is great and all but you still have to load the program and data into the computer before it can run and for this reason punch cards were used let's go to the thought bubble. Eventually as a big block once the program and data were in memory the computer would be told to execute it of course even simple computer programs might have hundreds of instructions which meant that programs were stored as stacks of punch cards so if you ever had the misfortune of accidentally dropping your program on the floor it could take you hours days or even weeks to put the code back in the right order a common trick was to draw a diagonal line on the side of the card stack called striping so you'd have at least some clue how to get it back into the right order phew. The us air forces sage air defense system completed in 1955 and its peak the project is said to have employed 20 of the worlds programmers its main control program was stored on a whopping 62 500 punch cards which is equivalent to roughly 5 megabytes of data pretty underwhelming by today is standards and punch cards weren't only useful for getting data into computers but also getting data out of them at the end of a program results could be written out of computer memory and onto punch cards by well. Then this data could be analysed by humans or loaded into a second program for additional computation thanks thought bubble a close cousin to punch cards was punched paper tape which was basically the same idea but continuous instead of being on individual cards and of course we haven't talked about hard drives cd rooms dds us thumb drives and other similar goodies we'll get to those more advanced types of data storage in a future episode finally in addition to plug boards and punched paper there was another common way to program and control computers are 1980s. Rather than having to physically plug in cables to activate certain functions this could also be done with huge panels full of switches and buttons and there were indicator lights to display the status of various functions and values in memory computers of the 50s and 60s often featured huge control consoles that looked like this although it was rare to input a whole program using just switches it was possible and early home computers made for the hobbyist market used switches extensively because most home users couldn't afford expensive peripherals like punch card readers. The most commercially successful home computer was the altair 8800 which sold in two versions preassembled and as a kit the kit which was popular with amateur computing enthusiasts sold for the then unprecedented low price of around 400 in 1975 or about 2 000 in 2017 to program the 8800 you'd literally toggle the switches on the front panel to enter the binary opcodes for the instruction you wanted then you'd press the deposit button to write that value into memory. Toggle the switches again for your next instruction deposit it and so on when you'd finally entered your whole program into memory you would toggle the switches to move back to memory address 0 press the run button and watch the little lights blink that was home computing in 1975 wow whether it was plug board switches or punched paper programming these early computers was the realm of experts either professionals who did this for a living or technology enthusiasts you need an intimate knowledge of the underlying hardware so things like processor opcodes and register widths to. Write programs this meant programming was hard and tedious and even professional engineers and scientists struggled to take full advantage of what computing could offer what was needed was a simpler way to tell computers what to do a simpler way to write programs and that brings us to programming languages which we'll talk about next episode see you next week. Was filmed at the chad and stacey emma golds studio in indianapolis indiana and it was made with the help of all these nice people and our wonderful graphics team thought cafe thanks for the random access memories i'll see you next time