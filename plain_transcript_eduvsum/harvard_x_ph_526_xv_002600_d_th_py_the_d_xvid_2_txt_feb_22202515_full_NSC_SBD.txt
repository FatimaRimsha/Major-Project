Sets are unordered collections of distinct washable objects but what does it mean for an object to be washable that's a more technical topic and we will not go into details here in practice what that means is you can use sets for immutable objects like numbers and strings but not for mutable objects like lists and dictionaries. Of sets one type of set is called just a set and the other type of set is called a frozen set the difference between these two is that a frozen set is not mutable once it has been created in other words it's immutable in contrast your usual normal set is mutable you can think of a set as an unordered collection of objects one of the key ideas about sets is that they cannot be indexed so the objects. Inside sets don't have locations another key feature about sets is that the elements can never be duplicated so if you have a given element or object in your set say number three if you try adding that number again in the set nothing happens this means that all of the objects inside a set are always going to be unique or distinct python sets are especially useful for keeping track of distinct objects and doing mathematical set operations. Like unions intersections and set differences let's next experiment with using sets let me start by creating an empty set i'm going to create an object a set that i'm going to call ids and the idea is that this would contain distinct ids in my study or my data set i can create an empty set by just using the keyword set and just following that with a set of parentheses in this case i would have created a set called ids. And it would be empty it would have no objects in it let's say that i want to do something a little different i'd like to create a set that has a few members in it and in this case the syntax is very similar i use the keyword set followed by parentheses and inside the parentheses i insert a list let's say that the numbers or the ids of our subjects are the following 1 2 4 6 7 8 and 9. And this is my initial set if i wanted to ask how many members do i have in this set i can use the len function and python tells me that i have seven objects in this set let's say i wanted to add one more id to this set let's call that id number 10 so i would type ids add and i'm adding a subject with an id number 10 to my set. If i type ids python tells me that these are the current members of the set and id number 10 has been added to this set if i now try adding let's say number 2 which i already have in my set and then i ask what are the members of the set now you'll see that nothing has happened and this is one of the key features of set in other words if you already have an object in the set and if you try adding that same object again. Nothing happens we can remove members or objects from sets using the pop function in that case python returns to you an arbitrary member of that set so i can run this a couple of times if i look at the contents of my set i can see now that i have five objects remaining in my set let me redefine my ids as set. It consists of individuals with ids ranging from 0 to 9 i can look at the contents and this looks correct imagine that some of these subjects are males and females so i'm going to construct a set that i'm going to call males so it's a set i need to build that as a list and let's say that these are the ids of the males. The very useful property of sets is that we can use them for mathematical set operations i can now use the set males to define a new set that i'm going to call females so i'm going to define females as all of the ids minus males if i ask python what is the type of females python is telling me it's a set i can look at the contents of that set i can also look at the contents of my males set. Set and i see that these two are distinct there are other ways to perform set operations in python for example i can perform the set union operation in a very handy way let's say that i want to create a set which i'm going to call everyone and everyone consists of all of the males and all of the females the shorthand operation for a set union in python is a vertical line again if i look at the contents of the set. I can see that all of these set members are there finally i can take an intersection of two sets using the ampersand operation let's say i wanted to take everyone and i wanted to take out another set so this is performing the intersection operation i can define another set which in this case consists of the ids 1 2 and 3 and then i can ask python to return everybody who is in the intersection of these two sets. Sets one is that containing members 1 2 and 3 and the other one containing everybody and in this case the answer is a set that consists of the ids 1 2 and 3 as a simple application of sets let's use sets to count the number of unique letters in a word so let me first define my word of interest let's go with something a little more complicated something like antidisestablishmentarianism i spelled that right now what i can do next is i can construct. The set so i just say set i construct that from my string which is called word and i'm going to call this letters to find out how many unique letters i have in this word i just ask python to return the length of the letters object which is 12 so in this case we were able to use the set object to simply count the number of unique letters in a string. You