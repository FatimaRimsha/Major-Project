Strings are immutable sequences of characters in python you can enclose strings in either single quotes in quotation marks or in triple quotes let's look at a couple of common sequence operations on strings let me first define a string let's just go with python. To find out how long is my string i can use the len function or if i wanted to access say the first or the last element of that string i can use my common generic sequence operations i can also do slicing so i might want to start from the very beginning of the string and take the first three objects in that case i specify the starting point of the slice and the endpoint of the string. The string. Imagine i wanted to ask is the character a part of my string so i can type in my a and i can ask is a in a and the answer is going to be true if i use capital a the answer is going to be false strings are a good place to talk about polymorphism remember polymorphism means that what an operator does depends on the type of objects it is being applied to this is just like in. Mathematics where you have to define addition separately for numbers as opposed to matrices or some other object in python we can add two numbers together by using the plus sign so for example i can just ask python what is 12 plus 12 i can also add two strings together in that case the operation is not called addition but concatenation so let's have one string here hello. To another string and actually what python does is the following it takes my first string it takes the second string and it concatenates those two strings together the result is the new strings where the previous two strings have been put together let's think about the multiplication operation first with numbers say in mathematics if we say something like three times five what we really mean is. 5 plus 5 plus 5 which would be 15 if we have a string in python let's call that a and if we type something like 3 times a python will turn this into a plus a plus a a plus sign between two numbers means addition whereas a plus sign between two strings means concatenation. Therefore to say 3 times a where a is a string object makes perfect sense in python let's try this out let's define a string object as let's just go with python if i type 3 times a python is going to take that string and concatenate with itself so the result is python python python a new string. In the examples that we looked at here we were applying a plus sign between two objects that were either a number and a number or a string and a string in order for polymorphism to work these two objects have to be of the same type so while it makes sense to add a number to a number and a string to a string it does not make sense to add a string to a number or vice versa let's look at this through an example. Let's try to concatenate a string and a number so first i need my string i'm going to have something like 8 equals and i'll try to add a number let's say 8 the reason this does not work is because the first object is a string and the second object is a number for me to be able to run this line what i need to do first is to take the number 8 and turn that number. That into a string i can explicitly turn a number to a string by using the str function in this case i have two strings so saying a string plus a string makes sense and the result works out the operations we have seen for strings so far have really all been generic sequence operations in addition to these operations strings also have their own methods that enable you to manipulate. Strings to get a directory of all attributes i type dir str for strings and python gives me a long list of different attributes that are available for strings let's see what type of help is available to us right here for example the string function replace looks interesting to me so i can just type str replace and i can enter a question mark at the end this gives me a very brief description. Description of the string replace method so let's use the replace method through an example i'm going to define a string let's call it name i'm going to use tina a here as my string and we'd like to replace the first capital to with a lowercase to i call the replace method and i'd like to replace the capital to with a lowercase to. Because strings are immutable objects python doesn't actually modify your string instead what it does it returns a new string to you if i'd like to keep this new string i have to assign it to some variable so for example i could call this new name which consists of the original name with the letter to replaced if i now look at the content of my original name you'll see that the to remains. Capitalized but if i ask what is my new name the capital to now appears as a lowercase to let's continue with our example but this time let's try the split method the split method takes a string and breaks that down into sub strings what you have to specify is the character you would like to use for splitting the string i can also take these strings and turn them into lowercase or uppercase. The string. We can extract the first object in that list and we can ask what is the type of that object now that we know it's a string we can call some string methods to modify that name so let's take that string names square bracket zero and let's call the upper method this turns the name tina into all uppercase we could similarly take let's say the string at location one and turn that into a. Lower case string using the lower method